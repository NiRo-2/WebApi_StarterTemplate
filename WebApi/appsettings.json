{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      //"Microsoft.AspNetCore": "Warning",
      "Microsoft": "Warning", // Log only warnings or errors from Microsoft libraries
      "Microsoft.AspNetCore": "Debug", // Detailed logs for ASP.NET Core
      "Microsoft.AspNetCore.Authentication": "Trace",
      "Microsoft.AspNetCore.Http": "Trace",
      "WebApi": "Debug" // Detailed logs
    }
  },
  //#region DB settings
  "DbIsSQLLite": true, //if false, using MySQL server
  "SQLiteDB": {
    "FileName": "sqlite.db",
    "maxRetries_WhenDbIsLocked": 30 //max retries when db is locked
  },
  "Db_MySQL": { //relevant only if DbIsSQLLite=false
    "sql_User": "root",
    "sql_Pass_enc": { //passes are encrypted to local machine and could not be decrypt on another
      "local": "",
      "production": ""
    },
    "server": "localhost",
    "database": "testing_db"
  },
  //#endregion
  //#region Cleanning services settings
  "ActiveSessions_CleanupIntervalHours": 24, //do activeSessions cleanup every x hours
  "UnconfirmedEmails_ExpirationHours": 72, //do cleanup every x hours which remove all users with unconfirmed email addresses
  "ExpiredPasswordResetTokens_CleanupIntervalHours": 24, //do expired password reset tokens cleanup every x hours
  //#endregion
  //#region Email settings
  "EmailSettings": {
    "FromAddress": "",
    "Password": { //passes are encrypted to local machine and could not be decrypt on another
      "local": "",
      "production": ""
    },
    "mailServer": "smtp.gmail.com",
    "mailServerPort": 587
  },
  //#endregion
  //#region Domain and ssl settings
  "LettuceEncrypt": { //auto ssl authentication
    "AcceptTermsOfService": true,
    "DomainNames": [ "" ], //domain
    "EmailAddress": "" //registered email
  },
  //#endregion
  //#region Server and security settings
  "PfxFilePath": "c:\\inetpub\\certs\\auto.pfx", //path to pfx file with certificate (auto generate usually by Certify The Web)
  "UseDomain": true,
  "ListeningUrls": { //listenning addresses and ports
    "local": "https://*:443;https://*:7211",
    "production_WithoutDomain": "https://*:5000", //if don't have a domain in LettuceEncrypt, this is the listenning address
    "production_WithDomain": 443 //if we have a domain in LettuceEncrypt, this is the port we listen to
  },
  "AllowedHosts": "*",
  "JWT": { //jwt settings
    "Issuer": "Issuer",
    "Audience": "Audience",
    "TokenExpirationHours": 24, //login token
    "EmailVerificationTokenExpirationHours": 168, //login token - 7 days
    "PasswordResetTokenExpirationMinutes": 10 //password jwt expiration in minutes
  },
  "Cors": { //addresses can be an array with ; as delimiter
    "local": "http://localhost:3000",
    "production": ""
  },
  //Ip black list - support single address and range (example: [127.0.0.1, 127.0.0.2-127.0.0.254])
  "IpBlacklist": [],
  "IpRateLimiting": { //IpRateLimiting
    "EnableEndpointRateLimiting": false,
    "StackBlockedRequests": false,
    "RealIpHeader": "X-Real-IP",
    "ClientIdHeader": "X-ClientId",
    "HttpStatusCode": 429,
    "IpWhitelist": [ "127.0.0.1", "::1/10", "192.168.0.0/24" ],
    "EndpointWhitelist": [ "get:/api/license", "*:/api/status" ],
    "ClientWhitelist": [],
    "GeneralRules": [
      {
        "Endpoint": "*",
        "Period": "1s",
        "Limit": 2
      },
      {
        "Endpoint": "*",
        "Period": "15m",
        "Limit": 100
      },
      {
        "Endpoint": "*",
        "Period": "12h",
        "Limit": 1000
      },
      {
        "Endpoint": "*",
        "Period": "7d",
        "Limit": 10000
      }
    ]
  },
  //Google reCaptcha settings
  "reCaptcha": {
    "Active": false, //use reCaptcha
    "Sitekey": "",
    "Secret": ""
  }
  //#endregion
}